{
    "resourcePath": "/word",
    "apis": [{
        "path": "/word/{word}/examples",
        "description": "",
        "operations": [{
            "parameters": [{
                "name": "word",
                "description": "Word to return examples for",
                "required": true,
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "path"
            }, {
                "name": "includeDuplicates",
                "defaultValue": "false",
                "description": "Show duplicate examples from different sources",
                "required": false,
                "allowableValues": {
                    "values": ["false", "true"],
                    "valueType": "LIST"
                },
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "query"
            }, {
                "name": "useCanonical",
                "defaultValue": "false",
                "description": "If true will try to return the correct word root ('cats' -> 'cat'). If false returns exactly what was requested.",
                "required": false,
                "allowableValues": {
                    "values": ["false", "true"],
                    "valueType": "LIST"
                },
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "query"
            }, {
                "name": "skip",
                "defaultValue": "0",
                "description": "Results to skip",
                "required": false,
                "dataType": "int",
                "allowMultiple": false,
                "paramType": "query"
            }, {
                "name": "limit",
                "defaultValue": "5",
                "description": "Maximum number of results to return",
                "required": false,
                "dataType": "int",
                "allowMultiple": false,
                "paramType": "query"
            }],
            "summary": "Returns examples for a word",
            "method": "GET",
            "nickname": "getExamples",
            "responseClass": "exampleSearchResults",
            "errorResponses": [{
                "reason": "Invalid word supplied.",
                "code": 400
            }]
        }]
    }, {
        "path": "/word/{word}",
        "description": "",
        "operations": [{
            "parameters": [{
                "name": "word",
                "description": "String value of WordObject to return",
                "required": true,
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "path"
            }, {
                "name": "useCanonical",
                "defaultValue": "false",
                "description": "If true will try to return the correct word root ('cats' -> 'cat'). If false returns exactly what was requested.",
                "required": false,
                "allowableValues": {
                    "values": ["false", "true"],
                    "valueType": "LIST"
                },
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "query"
            }, {
                "name": "includeSuggestions",
                "defaultValue": "true",
                "description": "Return suggestions (for correct spelling, case variants, etc.)",
                "required": false,
                "allowableValues": {
                    "values": ["false", "true"],
                    "valueType": "LIST"
                },
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "query"
            }],
            "summary": "Given a word as a string, returns the WordObject that represents it",
            "method": "GET",
            "nickname": "getWord",
            "responseClass": "wordObject",
            "errorResponses": [{
                "reason": "Invalid word supplied.",
                "code": 400
            }]
        }]
    }, {
        "path": "/word/{word}/definitions",
        "description": "",
        "operations": [{
            "parameters": [{
                "name": "word",
                "description": "Word to return definitions for",
                "required": true,
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "path"
            }, {
                "name": "limit",
                "defaultValue": "200",
                "description": "Maximum number of results to return",
                "required": false,
                "dataType": "int",
                "allowMultiple": false,
                "paramType": "query"
            }, {
                "name": "partOfSpeech",
                "description": "CSV list of part-of-speech types",
                "required": false,
                "allowableValues": {
                    "values": ["noun", "adjective", "verb", "adverb", "interjection", "pronoun", "preposition", "abbreviation", "affix", "article", "auxiliary-verb", "conjunction", "definite-article", "family-name", "given-name", "idiom", "imperative", "noun-plural", "noun-posessive", "past-participle", "phrasal-prefix", "proper-noun", "proper-noun-plural", "proper-noun-posessive", "suffix", "verb-intransitive", "verb-transitive"],
                    "valueType": "LIST"
                },
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "query"
            }, {
                "name": "includeRelated",
                "defaultValue": "false",
                "description": "Return related words with definitions",
                "required": false,
                "allowableValues": {
                    "values": ["true", "false"],
                    "valueType": "LIST"
                },
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "query"
            }, {
                "name": "sourceDictionaries",
                "description": "Source dictionary to return definitions from.  If 'all' is received, results are returned from all sources. If multiple values are received (e.g. 'century,wiktionary'), results are returned from the first specified dictionary that has definitions. If left blank, results are returned from the first dictionary that has definitions. By default, dictionaries are searched in this order: ahd, wiktionary, webster, century, wordnet",
                "required": false,
                "allowableValues": {
                    "values": ["all", "ahd", "century", "wiktionary", "webster", "wordnet"],
                    "valueType": "LIST"
                },
                "dataType": "string",
                "allowMultiple": true,
                "paramType": "query"
            }, {
                "name": "useCanonical",
                "defaultValue": "false",
                "description": "If true will try to return the correct word root ('cats' -> 'cat'). If false returns exactly what was requested.",
                "required": false,
                "allowableValues": {
                    "values": ["false", "true"],
                    "valueType": "LIST"
                },
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "query"
            }, {
                "name": "includeTags",
                "defaultValue": "false",
                "description": "Return a closed set of XML tags in response",
                "required": false,
                "allowableValues": {
                    "values": ["false", "true"],
                    "valueType": "LIST"
                },
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "query"
            }],
            "summary": "Return definitions for a word",
            "method": "GET",
            "nickname": "getDefinitions",
            "responseClass": "List[definition]",
            "errorResponses": [{
                "reason": "Invalid word supplied.",
                "code": 400
            }, {
                "reason": "No definitions found.",
                "code": 404
            }]
        }]
    }, {
        "path": "/word/{word}/topExample",
        "description": "",
        "operations": [{
            "parameters": [{
                "name": "word",
                "description": "Word to fetch examples for",
                "required": true,
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "path"
            }, {
                "name": "useCanonical",
                "defaultValue": "false",
                "description": "If true will try to return the correct word root ('cats' -> 'cat'). If false returns exactly what was requested.",
                "required": false,
                "allowableValues": {
                    "values": ["false", "true"],
                    "valueType": "LIST"
                },
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "query"
            }],
            "summary": "Returns a top example for a word",
            "method": "GET",
            "nickname": "getTopExample",
            "responseClass": "example",
            "errorResponses": [{
                "reason": "Invalid word supplied.",
                "code": 400
            }]
        }]
    }, {
        "path": "/word/{word}/etymologies",
        "description": "",
        "operations": [{
            "parameters": [{
                "name": "word",
                "description": "Word to return",
                "required": true,
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "path"
            }, {
                "name": "useCanonical",
                "description": "If true will try to return the correct word root ('cats' -> 'cat'). If false returns exactly what was requested.",
                "required": false,
                "allowableValues": {
                    "values": ["false", "true"],
                    "valueType": "LIST"
                },
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "query"
            }],
            "summary": "Fetches etymology data",
            "method": "GET",
            "nickname": "getEtymologies",
            "responseClass": "List[String]",
            "errorResponses": [{
                "reason": "Invalid word supplied.",
                "code": 400
            }, {
                "reason": "No definitions found.",
                "code": 404
            }]
        }]
    }, {
        "path": "/word/{word}/relatedWords",
        "description": "",
        "operations": [{
            "parameters": [{
                "name": "word",
                "description": "Word to fetch relationships for",
                "required": true,
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "path"
            }, {
                "name": "useCanonical",
                "defaultValue": "false",
                "description": "If true will try to return the correct word root ('cats' -> 'cat'). If false returns exactly what was requested.",
                "required": false,
                "allowableValues": {
                    "values": ["false", "true"],
                    "valueType": "LIST"
                },
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "query"
            }, {
                "name": "relationshipTypes",
                "description": "Limits the total results per type of relationship type",
                "required": false,
                "allowableValues": {
                    "values": ["synonym", "antonym", "variant", "equivalent", "cross-reference", "related-word", "rhyme", "form", "etymologically-related-term", "hypernym", "hyponym", "inflected-form", "primary", "same-context", "verb-form", "verb-stem", "has_topic"],
                    "valueType": "LIST"
                },
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "query"
            }, {
                "name": "limitPerRelationshipType",
                "defaultValue": "10",
                "description": "Restrict to the supplied relatinship types",
                "required": false,
                "allowableValues": {
                    "max": "Infinity",
                    "min": 1.0,
                    "valueType": "RANGE"
                },
                "dataType": "int",
                "allowMultiple": false,
                "paramType": "query"
            }],
            "summary": "Given a word as a string, returns relationships from the Word Graph",
            "method": "GET",
            "nickname": "getRelatedWords",
            "responseClass": "List[related]",
            "errorResponses": [{
                "reason": "Invalid word supplied.",
                "code": 400
            }]
        }]
    }, {
        "path": "/word/{word}/pronunciations",
        "description": "",
        "operations": [{
            "parameters": [{
                "name": "word",
                "description": "Word to get pronunciations for",
                "required": true,
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "path"
            }, {
                "name": "useCanonical",
                "defaultValue": "false",
                "description": "If true will try to return a correct word root ('cats' -> 'cat'). If false returns exactly what was requested.",
                "required": false,
                "allowableValues": {
                    "values": ["false", "true"],
                    "valueType": "LIST"
                },
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "query"
            }, {
                "name": "sourceDictionary",
                "description": "Get from a single dictionary",
                "required": false,
                "allowableValues": {
                    "values": ["ahd", "century", "cmu", "macmillan", "wiktionary", "webster", "wordnet"],
                    "valueType": "LIST"
                },
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "query"
            }, {
                "name": "typeFormat",
                "description": "Text pronunciation type",
                "required": false,
                "allowableValues": {
                    "values": ["ahd", "arpabet", "gcide-diacritical", "IPA"],
                    "valueType": "LIST"
                },
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "query"
            }, {
                "name": "limit",
                "defaultValue": "50",
                "description": "Maximum number of results to return",
                "required": false,
                "dataType": "int",
                "allowMultiple": false,
                "paramType": "query"
            }],
            "summary": "Returns text pronunciations for a given word",
            "method": "GET",
            "nickname": "getTextPronunciations",
            "responseClass": "List[textPron]",
            "errorResponses": [{
                "reason": "Invalid word supplied.",
                "code": 400
            }]
        }]
    }, {
        "path": "/word/{word}/scrabbleScore",
        "description": "",
        "operations": [{
            "parameters": [{
                "name": "word",
                "description": "Word to get scrabble score for.",
                "required": true,
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "path"
            }],
            "summary": "Returns the Scrabble score for a word",
            "method": "GET",
            "nickname": "getScrabbleScore",
            "responseClass": "long",
            "errorResponses": [{
                "reason": "Invalid word supplied.",
                "code": 400
            }, {
                "reason": "No scrabble score found.",
                "code": 404
            }]
        }]
    }, {
        "path": "/word/{word}/hyphenation",
        "description": "",
        "operations": [{
            "parameters": [{
                "name": "word",
                "description": "Word to get syllables for",
                "required": true,
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "path"
            }, {
                "name": "useCanonical",
                "defaultValue": "false",
                "description": "If true will try to return a correct word root ('cats' -> 'cat'). If false returns exactly what was requested.",
                "required": false,
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "query"
            }, {
                "name": "sourceDictionary",
                "description": "Get from a single dictionary. Valid options: ahd, century, wiktionary, webster, and wordnet.",
                "required": false,
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "query"
            }, {
                "name": "limit",
                "defaultValue": "50",
                "description": "Maximum number of results to return",
                "required": false,
                "dataType": "int",
                "allowMultiple": false,
                "paramType": "query"
            }],
            "summary": "Returns syllable information for a word",
            "method": "GET",
            "nickname": "getHyphenation",
            "responseClass": "List[syllable]",
            "errorResponses": [{
                "reason": "Invalid word supplied.",
                "code": 400
            }]
        }]
    }, {
        "path": "/word/{word}/frequency",
        "description": "",
        "operations": [{
            "parameters": [{
                "name": "word",
                "description": "Word to return",
                "required": true,
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "path"
            }, {
                "name": "useCanonical",
                "defaultValue": "false",
                "description": "If true will try to return the correct word root ('cats' -> 'cat'). If false returns exactly what was requested.",
                "required": false,
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "query"
            }, {
                "name": "startYear",
                "defaultValue": "1800",
                "description": "Starting Year",
                "required": false,
                "dataType": "int",
                "allowMultiple": false,
                "paramType": "query"
            }, {
                "name": "endYear",
                "defaultValue": "2012",
                "description": "Ending Year",
                "required": false,
                "dataType": "int",
                "allowMultiple": false,
                "paramType": "query"
            }],
            "summary": "Returns word usage over time",
            "method": "GET",
            "nickname": "getWordFrequency",
            "responseClass": "frequencySummary",
            "errorResponses": [{
                "reason": "Invalid word supplied.",
                "code": 400
            }, {
                "reason": "No results.",
                "code": 404
            }]
        }]
    }, {
        "path": "/word/{word}/phrases",
        "description": "",
        "operations": [{
            "parameters": [{
                "name": "word",
                "description": "Word to fetch phrases for",
                "required": true,
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "path"
            }, {
                "name": "limit",
                "defaultValue": "5",
                "description": "Maximum number of results to return",
                "required": false,
                "dataType": "int",
                "allowMultiple": false,
                "paramType": "query"
            }, {
                "name": "wlmi",
                "defaultValue": "0",
                "description": "Minimum WLMI for the phrase",
                "required": false,
                "dataType": "int",
                "allowMultiple": false,
                "paramType": "query"
            }, {
                "name": "useCanonical",
                "defaultValue": "false",
                "description": "If true will try to return the correct word root ('cats' -> 'cat'). If false returns exactly what was requested.",
                "required": false,
                "allowableValues": {
                    "values": ["false", "true"],
                    "valueType": "LIST"
                },
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "query"
            }],
            "summary": "Fetches bi-gram phrases for a word",
            "method": "GET",
            "nickname": "getPhrases",
            "responseClass": "List[bigram]",
            "errorResponses": [{
                "reason": "Invalid word supplied.",
                "code": 400
            }]
        }]
    }, {
        "path": "/word/{word}/audio",
        "description": "",
        "operations": [{
            "parameters": [{
                "name": "word",
                "description": "Word to get audio for.",
                "required": true,
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "path"
            }, {
                "name": "useCanonical",
                "defaultValue": "false",
                "description": "Use the canonical form of the word",
                "required": false,
                "dataType": "string",
                "allowMultiple": false,
                "paramType": "query"
            }, {
                "name": "limit",
                "defaultValue": "50",
                "description": "Maximum number of results to return",
                "required": false,
                "dataType": "int",
                "allowMultiple": false,
                "paramType": "query"
            }],
            "summary": "Fetches audio metadata for a word.",
            "method": "GET",
            "nickname": "getAudio",
            "responseClass": "List[audioFile]",
            "notes": "The metadata includes a time-expiring fileUrl which allows reading the audio file directly from the API.  Currently only audio pronunciations from the American Heritage Dictionary in mp3 format are supported.",
            "errorResponses": [{
                "reason": "Invalid word supplied.",
                "code": 400
            }]
        }]
    }],
    "models": {
        "Syllable": {
            "uniqueItems": false,
            "properties": {
                "text": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "seq": {
                    "uniqueItems": false,
                    "type": "int",
                    "required": false
                },
                "type": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                }
            },
            "id": "syllable",
            "type": "any",
            "required": false
        },
        "AudioType": {
            "uniqueItems": false,
            "properties": {
                "id": {
                    "uniqueItems": false,
                    "type": "int",
                    "required": false
                },
                "name": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                }
            },
            "id": "audioType",
            "type": "any",
            "required": false
        },
        "Facet": {
            "uniqueItems": false,
            "properties": {
                "facetValues": {
                    "uniqueItems": false,
                    "type": "array",
                    "required": false,
                    "items": {
                        "$ref": "facetValue",
                        "uniqueItems": false,
                        "type": "any",
                        "required": false
                    }
                },
                "name": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                }
            },
            "id": "facet",
            "type": "any",
            "required": false
        },
        "WordObject": {
            "uniqueItems": false,
            "properties": {
                "id": {
                    "uniqueItems": false,
                    "type": "long",
                    "required": true
                },
                "word": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "originalWord": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "suggestions": {
                    "uniqueItems": false,
                    "type": "array",
                    "required": false,
                    "items": {
                        "uniqueItems": false,
                        "type": "string",
                        "required": false
                    }
                },
                "canonicalForm": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "vulgar": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                }
            },
            "id": "wordObject",
            "type": "any",
            "required": false
        },
        "ExampleSearchResults": {
            "uniqueItems": false,
            "properties": {
                "facets": {
                    "uniqueItems": false,
                    "type": "array",
                    "required": false,
                    "items": {
                        "$ref": "facet",
                        "uniqueItems": false,
                        "type": "any",
                        "required": false
                    }
                },
                "examples": {
                    "uniqueItems": false,
                    "type": "array",
                    "required": false,
                    "items": {
                        "$ref": "example",
                        "uniqueItems": false,
                        "type": "any",
                        "required": false
                    }
                }
            },
            "id": "exampleSearchResults",
            "type": "any",
            "required": false
        },
        "Example": {
            "uniqueItems": false,
            "properties": {
                "id": {
                    "uniqueItems": false,
                    "type": "long",
                    "required": false
                },
                "exampleId": {
                    "uniqueItems": false,
                    "type": "long",
                    "required": false
                },
                "title": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "text": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "score": {
                    "uniqueItems": false,
                    "type": "scoredWord",
                    "required": false
                },
                "sentence": {
                    "uniqueItems": false,
                    "type": "sentence",
                    "required": false
                },
                "word": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "provider": {
                    "uniqueItems": false,
                    "type": "contentProvider",
                    "required": false
                },
                "year": {
                    "uniqueItems": false,
                    "type": "integer",
                    "required": false
                },
                "rating": {
                    "uniqueItems": false,
                    "type": "float",
                    "required": false
                },
                "documentId": {
                    "uniqueItems": false,
                    "type": "long",
                    "required": false
                },
                "url": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                }
            },
            "id": "example",
            "type": "any",
            "required": false
        },
        "AudioFile": {
            "uniqueItems": false,
            "properties": {
                "attributionUrl": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "commentCount": {
                    "uniqueItems": false,
                    "type": "int",
                    "required": false
                },
                "voteCount": {
                    "uniqueItems": false,
                    "type": "integer",
                    "required": false
                },
                "fileUrl": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "audioType": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "id": {
                    "uniqueItems": false,
                    "type": "long",
                    "required": true
                },
                "duration": {
                    "uniqueItems": false,
                    "type": "double",
                    "required": false
                },
                "attributionText": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "createdBy": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "description": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "createdAt": {
                    "uniqueItems": false,
                    "type": "Date",
                    "required": false
                },
                "voteWeightedAverage": {
                    "uniqueItems": false,
                    "type": "float",
                    "required": false
                },
                "voteAverage": {
                    "uniqueItems": false,
                    "type": "float",
                    "required": false
                },
                "word": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                }
            },
            "id": "audioFile",
            "type": "any",
            "required": false
        },
        "ExampleUsage": {
            "uniqueItems": false,
            "properties": {
                "text": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                }
            },
            "id": "ExampleUsage",
            "type": "any",
            "required": false
        },
        "Bigram": {
            "uniqueItems": false,
            "properties": {
                "count": {
                    "uniqueItems": false,
                    "type": "long",
                    "required": false
                },
                "gram2": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "gram1": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "wlmi": {
                    "uniqueItems": false,
                    "type": "double",
                    "required": false
                },
                "mi": {
                    "uniqueItems": false,
                    "type": "double",
                    "required": false
                }
            },
            "id": "bigram",
            "type": "any",
            "required": false
        },
        "Frequency": {
            "uniqueItems": false,
            "properties": {
                "count": {
                    "uniqueItems": false,
                    "type": "long",
                    "required": false
                },
                "year": {
                    "uniqueItems": false,
                    "type": "int",
                    "required": false
                }
            },
            "id": "frequency",
            "type": "any",
            "required": false
        },
        "TextPron": {
            "uniqueItems": false,
            "properties": {
                "raw": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "seq": {
                    "uniqueItems": false,
                    "type": "int",
                    "required": false
                },
                "rawType": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                }
            },
            "id": "textPron",
            "type": "any",
            "required": false
        },
        "Long": {
            "uniqueItems": false,
            "properties": {
                "value": {
                    "uniqueItems": false,
                    "type": "long",
                    "required": false
                }
            },
            "id": "long",
            "type": "any",
            "required": false
        },
        "Note": {
            "uniqueItems": false,
            "properties": {
                "noteType": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "appliesTo": {
                    "uniqueItems": false,
                    "type": "array",
                    "required": false,
                    "items": {
                        "uniqueItems": false,
                        "type": "string",
                        "required": false
                    }
                },
                "value": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "pos": {
                    "uniqueItems": false,
                    "type": "int",
                    "required": false
                }
            },
            "id": "note",
            "type": "any",
            "required": false
        },
        "FacetValue": {
            "uniqueItems": false,
            "properties": {
                "count": {
                    "uniqueItems": false,
                    "type": "long",
                    "required": false
                },
                "value": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                }
            },
            "id": "facetValue",
            "type": "any",
            "required": false
        },
        "Related": {
            "uniqueItems": false,
            "properties": {
                "label1": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "relationshipType": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "label2": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "label3": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "words": {
                    "uniqueItems": false,
                    "type": "array",
                    "required": false,
                    "items": {
                        "uniqueItems": false,
                        "type": "string",
                        "required": false
                    }
                },
                "gram": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "label4": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                }
            },
            "id": "related",
            "type": "any",
            "required": false
        },
        "Citation": {
            "uniqueItems": false,
            "properties": {
                "cite": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "source": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                }
            },
            "id": "citation",
            "type": "any",
            "required": false
        },
        "ScoredWord": {
            "uniqueItems": false,
            "properties": {
                "position": {
                    "uniqueItems": false,
                    "type": "int",
                    "required": false
                },
                "id": {
                    "uniqueItems": false,
                    "type": "long",
                    "required": false
                },
                "docTermCount": {
                    "uniqueItems": false,
                    "type": "int",
                    "required": false
                },
                "lemma": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "wordType": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "score": {
                    "uniqueItems": false,
                    "type": "float",
                    "required": false
                },
                "sentenceId": {
                    "uniqueItems": false,
                    "type": "long",
                    "required": false
                },
                "word": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "stopword": {
                    "uniqueItems": false,
                    "type": "boolean",
                    "required": false
                },
                "baseWordScore": {
                    "uniqueItems": false,
                    "type": "double",
                    "required": false
                },
                "partOfSpeech": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                }
            },
            "id": "scoredWord",
            "type": "any",
            "required": false
        },
        "Category": {
            "uniqueItems": false,
            "properties": {
                "id": {
                    "uniqueItems": false,
                    "type": "long",
                    "required": true
                },
                "name": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                }
            },
            "id": "category",
            "type": "any",
            "required": false
        },
        "Sentence": {
            "uniqueItems": false,
            "properties": {
                "hasScoredWords": {
                    "uniqueItems": false,
                    "type": "boolean",
                    "required": false
                },
                "id": {
                    "uniqueItems": false,
                    "type": "long",
                    "required": false
                },
                "scoredWords": {
                    "uniqueItems": false,
                    "type": "array",
                    "required": false,
                    "items": {
                        "$ref": "scoredWord",
                        "uniqueItems": false,
                        "type": "any",
                        "required": false
                    }
                },
                "display": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "rating": {
                    "uniqueItems": false,
                    "type": "int",
                    "required": false
                },
                "documentMetadataId": {
                    "uniqueItems": false,
                    "type": "long",
                    "required": false
                }
            },
            "id": "sentence",
            "type": "any",
            "required": false
        },
        "Root": {
            "uniqueItems": false,
            "properties": {
                "id": {
                    "uniqueItems": false,
                    "type": "long",
                    "required": true
                },
                "name": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "categories": {
                    "uniqueItems": false,
                    "type": "array",
                    "required": false,
                    "items": {
                        "$ref": "category",
                        "uniqueItems": false,
                        "type": "any",
                        "required": false
                    }
                }
            },
            "id": "root",
            "type": "any",
            "required": false
        },
        "ContentProvider": {
            "uniqueItems": false,
            "properties": {
                "id": {
                    "uniqueItems": false,
                    "type": "int",
                    "required": false
                },
                "name": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                }
            },
            "id": "contentProvider",
            "type": "any",
            "required": false
        },
        "Label": {
            "uniqueItems": false,
            "properties": {
                "text": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "type": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                }
            },
            "id": "Label",
            "type": "any",
            "required": false
        },
        "PartOfSpeech": {
            "uniqueItems": false,
            "properties": {
                "roots": {
                    "uniqueItems": false,
                    "type": "array",
                    "required": false,
                    "items": {
                        "$ref": "root",
                        "uniqueItems": false,
                        "type": "any",
                        "required": false
                    }
                },
                "storageAbbr": {
                    "uniqueItems": false,
                    "type": "array",
                    "required": false,
                    "items": {
                        "uniqueItems": false,
                        "type": "string",
                        "required": false
                    }
                },
                "allCategories": {
                    "uniqueItems": false,
                    "type": "array",
                    "required": false,
                    "items": {
                        "$ref": "category",
                        "uniqueItems": false,
                        "type": "any",
                        "required": false
                    }
                }
            },
            "id": "partOfSpeech",
            "type": "any",
            "required": false
        },
        "Definition": {
            "uniqueItems": false,
            "properties": {
                "extendedText": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "text": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "sourceDictionary": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "citations": {
                    "uniqueItems": false,
                    "type": "array",
                    "required": false,
                    "items": {
                        "$ref": "citation",
                        "uniqueItems": false,
                        "type": "any",
                        "required": false
                    }
                },
                "labels": {
                    "uniqueItems": false,
                    "type": "array",
                    "required": false,
                    "items": {
                        "$ref": "Label",
                        "uniqueItems": false,
                        "type": "any",
                        "required": false
                    }
                },
                "score": {
                    "uniqueItems": false,
                    "type": "float",
                    "required": false
                },
                "exampleUses": {
                    "uniqueItems": false,
                    "type": "array",
                    "required": false,
                    "items": {
                        "$ref": "ExampleUsage",
                        "uniqueItems": false,
                        "type": "any",
                        "required": false
                    }
                },
                "attributionUrl": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "seqString": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "attributionText": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "relatedWords": {
                    "uniqueItems": false,
                    "type": "array",
                    "required": false,
                    "items": {
                        "$ref": "related",
                        "uniqueItems": false,
                        "type": "any",
                        "required": false
                    }
                },
                "sequence": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "word": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "textProns": {
                    "uniqueItems": false,
                    "type": "array",
                    "required": false,
                    "items": {
                        "$ref": "textPron",
                        "uniqueItems": false,
                        "type": "any",
                        "required": false
                    }
                },
                "notes": {
                    "uniqueItems": false,
                    "type": "array",
                    "required": false,
                    "items": {
                        "$ref": "note",
                        "uniqueItems": false,
                        "type": "any",
                        "required": false
                    }
                },
                "partOfSpeech": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                }
            },
            "id": "definition",
            "type": "any",
            "required": false
        },
        "FrequencySummary": {
            "uniqueItems": false,
            "properties": {
                "unknownYearCount": {
                    "uniqueItems": false,
                    "type": "int",
                    "required": false
                },
                "totalCount": {
                    "uniqueItems": false,
                    "type": "long",
                    "required": false
                },
                "frequencyString": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "word": {
                    "uniqueItems": false,
                    "type": "string",
                    "required": false
                },
                "frequency": {
                    "uniqueItems": false,
                    "type": "array",
                    "required": false,
                    "items": {
                        "$ref": "frequency",
                        "uniqueItems": false,
                        "type": "any",
                        "required": false
                    }
                }
            },
            "id": "frequencySummary",
            "type": "any",
            "required": false
        }
    },
    "apiVersion": "4.0",
    "swaggerVersion": "1.0",
    "basePath": "http://api.wordnik.com/v4"
}
